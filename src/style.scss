.profile-container {
	display: flex;
	flex-wrap: wrap;
}

.profile-icon-wrapper {
	height: 1em;
	width: 1em;
	padding: 1em;
	text-align: center;
	display: flex;
	align-items: center;
	justify-content: center;
	text-decoration: none;
	color: #ffffff;
	margin: 5px;
}

.profile-icon-wrapper:hover {
	color: #ffffff;
}

.profile-icon-wrapper:visited {
	color: #ffffff;
}

/* Add Social Profile Original Icon Styles */
$twitter: #00aced;
$facebook: #3b5998;
$google-plus: #dd4b39;
$pinterest: #cb2027;
$linkedin: #007bb6;
$youtube: #ff0000;
$vimeo: #1ab7ea;
$tumblr: #32506d;
$instagram: #bc2a8d;
$flickr: #ff0084;
$dribbble: #ea4c89;
$quora: #a82400;
$foursquare: #0072b1;
$forrst: #5b9a68;
$vk: #45668e;
$wordpress: #21759b;
$stumbleupon: #eb4823;
$yahoo: #7b0099;
$blogger: #fb8f3d;
$soundcloud: #ff3a00;
$skype: #00aaf2;
$whatsapp: #4dc247;
$github: #000000;
$reddit: #ff4500;
$stack-overflow: #ffa500;

.facebook-f-original {
	background: $facebook;
}

.twitter-original {
	background: $twitter;
}

.google-plus-original {
	background: $google-plus;
}

.pinterest-original {
	background: $pinterest;
}

.linkedin-original {
	background: $linkedin;
}

.youtube-original {
	background: $youtube;
}

.vimeo-v-original {
	background: $vimeo;
}

.tumblr-original {
	background: $tumblr;
}

.instagram-original {
	background: $instagram;
	background: -moz-linear-gradient(
		45deg,
		#f09433 0%,
		#e6683c 25%,
		#dc2743 50%,
		#cc2366 75%,
		#bc1888 100%
	);
	background: -webkit-linear-gradient(
		45deg,
		#f09433 0%,
		#e6683c 25%,
		#dc2743 50%,
		#cc2366 75%,
		#bc1888 100%
	);
	background: linear-gradient(
		45deg,
		#f09433 0%,
		#e6683c 25%,
		#dc2743 50%,
		#cc2366 75%,
		#bc1888 100%
	);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f09433', endColorstr='#bc1888',GradientType=1 );
}

.flickr-original {
	background: $flickr;
}

.dribbble-original {
	background: $dribbble;
}

.quora-original {
	background: $quora;
}

.foursquare-original {
	background: $foursquare;
}

.forrst-original {
	background: $forrst;
}

.vk-original {
	background: $vk;
}

.wordpress-simple-original {
	background: $wordpress;
}

.yahoo-original {
	background: $yahoo;
}

.soundcloud-original {
	background: $soundcloud;
}

.skype-original {
	background: $skype;
}

.github-original {
	background: $github;
	color: #ffffff;
}

.reddit-original {
	background: $reddit;
}

.stack-overflow-original {
	background: $stack-overflow;
}

.stumbleupon-original {
	background: $stumbleupon;
}

.blogger-b-original {
	background: $blogger;
}

.whatsapp-original {
	background: $whatsapp;
}

// Font Icon Picker scsss
/// Gives a card depth effect.
/// @param {Number} $depth - depth level (between 1 and 5)
/// @link http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality Google Design
/// @requires {function} top-shadow
/// @requires {function} bottom-shadow
@mixin card($depth) {
	@if $depth < 1 {
		box-shadow: none;
	} @else if $depth > 5 {
		@warn 'Invalid $depth `#{$depth}` for mixin `card`.';
	} @else {
		box-shadow: bottom-shadow($depth), top-shadow($depth);
	}
}
/// Computes a top-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function top-shadow($depth) {
	$primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
	$blur: nth(1.5 3 10 14 19, $depth) * 4px;
	$color: rgba(black, nth(0.12 0.16 0.19 0.25 0.3, $depth));

	@return 0 $primary-offset $blur $color;
}

/// Computes a bottom-shadow for a card effect.
/// @param {Number} $depth - depth level
/// @return {List}
@function bottom-shadow($depth) {
	$primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
	$blur: nth(1 3 3 5 6, $depth) * 4px;
	$color: rgba(black, nth(0.24 0.23 0.23 0.22 0.22, $depth));

	@return 0 $primary-offset $blur $color;
}

/// Input type element
@mixin input($elem-border-color, $elem-border-focus-color) {
	border: 0 none;
	border-bottom: 1px solid $elem-border-color;
	transition: box-shadow 250ms, border 250ms;
	&:focus,
	&:active {
		border-bottom-color: $elem-border-focus-color;
		box-shadow: 0 1px 0 0 $elem-border-focus-color;
		outline: 0 none;
	}
}

/**
 * google-material-color v1.2.6
 * https://github.com/danlevan/google-material-color
 */
$palette: (
	Red: (
		50: #ffebee,
		100: #ffcdd2,
		200: #ef9a9a,
		300: #e57373,
		400: #ef5350,
		500: #f44336,
		600: #e53935,
		700: #d32f2f,
		800: #c62828,
		900: #b71c1c,
		A100: #ff8a80,
		A200: #ff5252,
		A400: #ff1744,
		A700: #d50000
	),
	Pink: (
		50: #fce4ec,
		100: #f8bbd0,
		200: #f48fb1,
		300: #f06292,
		400: #ec407a,
		500: #e91e63,
		600: #d81b60,
		700: #c2185b,
		800: #ad1457,
		900: #880e4f,
		A100: #ff80ab,
		A200: #ff4081,
		A400: #f50057,
		A700: #c51162
	),
	Purple: (
		50: #f3e5f5,
		100: #e1bee7,
		200: #ce93d8,
		300: #ba68c8,
		400: #ab47bc,
		500: #9c27b0,
		600: #8e24aa,
		700: #7b1fa2,
		800: #6a1b9a,
		900: #4a148c,
		A100: #ea80fc,
		A200: #e040fb,
		A400: #d500f9,
		A700: #aa00ff
	),
	Deep Purple:
		(
			50: #ede7f6,
			100: #d1c4e9,
			200: #b39ddb,
			300: #9575cd,
			400: #7e57c2,
			500: #673ab7,
			600: #5e35b1,
			700: #512da8,
			800: #4527a0,
			900: #311b92,
			A100: #b388ff,
			A200: #7c4dff,
			A400: #651fff,
			A700: #6200ea
		),
	Indigo: (
		50: #e8eaf6,
		100: #c5cae9,
		200: #9fa8da,
		300: #7986cb,
		400: #5c6bc0,
		500: #3f51b5,
		600: #3949ab,
		700: #303f9f,
		800: #283593,
		900: #1a237e,
		A100: #8c9eff,
		A200: #536dfe,
		A400: #3d5afe,
		A700: #304ffe
	),
	Blue: (
		50: #e3f2fd,
		100: #bbdefb,
		200: #90caf9,
		300: #64b5f6,
		400: #42a5f5,
		500: #2196f3,
		600: #1e88e5,
		700: #1976d2,
		800: #1565c0,
		900: #0d47a1,
		A100: #82b1ff,
		A200: #448aff,
		A400: #2979ff,
		A700: #2962ff
	),
	Light Blue:
		(
			50: #e1f5fe,
			100: #b3e5fc,
			200: #81d4fa,
			300: #4fc3f7,
			400: #29b6f6,
			500: #03a9f4,
			600: #039be5,
			700: #0288d1,
			800: #0277bd,
			900: #01579b,
			A100: #80d8ff,
			A200: #40c4ff,
			A400: #00b0ff,
			A700: #0091ea
		),
	Cyan: (
		50: #e0f7fa,
		100: #b2ebf2,
		200: #80deea,
		300: #4dd0e1,
		400: #26c6da,
		500: #00bcd4,
		600: #00acc1,
		700: #0097a7,
		800: #00838f,
		900: #006064,
		A100: #84ffff,
		A200: #18ffff,
		A400: #00e5ff,
		A700: #00b8d4
	),
	Teal: (
		50: #e0f2f1,
		100: #b2dfdb,
		200: #80cbc4,
		300: #4db6ac,
		400: #26a69a,
		500: #009688,
		600: #00897b,
		700: #00796b,
		800: #00695c,
		900: #004d40,
		A100: #a7ffeb,
		A200: #64ffda,
		A400: #1de9b6,
		A700: #00bfa5
	),
	Green: (
		50: #e8f5e9,
		100: #c8e6c9,
		200: #a5d6a7,
		300: #81c784,
		400: #66bb6a,
		500: #4caf50,
		600: #43a047,
		700: #388e3c,
		800: #2e7d32,
		900: #1b5e20,
		A100: #b9f6ca,
		A200: #69f0ae,
		A400: #00e676,
		A700: #00c853
	),
	Light Green:
		(
			50: #f1f8e9,
			100: #dcedc8,
			200: #c5e1a5,
			300: #aed581,
			400: #9ccc65,
			500: #8bc34a,
			600: #7cb342,
			700: #689f38,
			800: #558b2f,
			900: #33691e,
			A100: #ccff90,
			A200: #b2ff59,
			A400: #76ff03,
			A700: #64dd17
		),
	Lime: (
		50: #f9fbe7,
		100: #f0f4c3,
		200: #e6ee9c,
		300: #dce775,
		400: #d4e157,
		500: #cddc39,
		600: #c0ca33,
		700: #afb42b,
		800: #9e9d24,
		900: #827717,
		A100: #f4ff81,
		A200: #eeff41,
		A400: #c6ff00,
		A700: #aeea00
	),
	Yellow: (
		50: #fffde7,
		100: #fff9c4,
		200: #fff59d,
		300: #fff176,
		400: #ffee58,
		500: #ffeb3b,
		600: #fdd835,
		700: #fbc02d,
		800: #f9a825,
		900: #f57f17,
		A100: #ffff8d,
		A200: #ffff00,
		A400: #ffea00,
		A700: #ffd600
	),
	Amber: (
		50: #fff8e1,
		100: #ffecb3,
		200: #ffe082,
		300: #ffd54f,
		400: #ffca28,
		500: #ffc107,
		600: #ffb300,
		700: #ffa000,
		800: #ff8f00,
		900: #ff6f00,
		A100: #ffe57f,
		A200: #ffd740,
		A400: #ffc400,
		A700: #ffab00
	),
	Orange: (
		50: #fff3e0,
		100: #ffe0b2,
		200: #ffcc80,
		300: #ffb74d,
		400: #ffa726,
		500: #ff9800,
		600: #fb8c00,
		700: #f57c00,
		800: #ef6c00,
		900: #e65100,
		A100: #ffd180,
		A200: #ffab40,
		A400: #ff9100,
		A700: #ff6d00
	),
	Deep Orange:
		(
			50: #fbe9e7,
			100: #ffccbc,
			200: #ffab91,
			300: #ff8a65,
			400: #ff7043,
			500: #ff5722,
			600: #f4511e,
			700: #e64a19,
			800: #d84315,
			900: #bf360c,
			A100: #ff9e80,
			A200: #ff6e40,
			A400: #ff3d00,
			A700: #dd2c00
		),
	Brown: (
		50: #efebe9,
		100: #d7ccc8,
		200: #bcaaa4,
		300: #a1887f,
		400: #8d6e63,
		500: #795548,
		600: #6d4c41,
		700: #5d4037,
		800: #4e342e,
		900: #3e2723
	),
	Grey: (
		50: #fafafa,
		100: #f5f5f5,
		200: #eeeeee,
		300: #e0e0e0,
		400: #bdbdbd,
		500: #9e9e9e,
		600: #757575,
		700: #616161,
		800: #424242,
		900: #212121
	),
	Blue Grey:
		(
			50: #eceff1,
			100: #cfd8dc,
			200: #b0bec5,
			300: #90a4ae,
			400: #78909c,
			500: #607d8b,
			600: #546e7a,
			700: #455a64,
			800: #37474f,
			900: #263238
		),
	Black: (
		500: #000000,
		Text: rgba(0, 0, 0, 0.87),
		Secondary Text: rgba(0, 0, 0, 0.54),
		Icons: rgba(0, 0, 0, 0.54),
		Disabled: rgba(0, 0, 0, 0.26),
		Hint Text: rgba(0, 0, 0, 0.26),
		Dividers: rgba(0, 0, 0, 0.12)
	),
	White: (
		500: #ffffff,
		Text: #ffffff,
		Secondary Text: rgba(255, 255, 255, 0.7),
		Icons: #ffffff,
		Disabled: rgba(255, 255, 255, 0.3),
		Hint Text: rgba(255, 255, 255, 0.3),
		Dividers: rgba(255, 255, 255, 0.12)
	)
);

@function palette($color, $shade: 500) {
	$colorMap: map-get($palette, $color);
	$result: map-get($colorMap, $shade);
	@return $result;
}

$scheme: Grey !default;
$bg: White !default;

$text: palette(Grey, 800) !default;
$icon-text: palette($scheme, 800) !default;

$color-background: palette($bg, 500) !default;

$elem-border-color: palette($scheme, 400) !default;
$elem-border-focus-color: palette($scheme, 500) !default;

$pager-bg-color: palette($scheme, 200) !default;
$pager-bg-hover-color: palette($scheme, 400) !default;

$ibox-bg-color: palette($scheme, 100) !default;
$ibox-bg-selected-color: palette($scheme, 200) !default;
$ibox-bg-hover-color: palette($scheme, 400) !default;

$btn-bg-color: palette($bg, 500) !default;
$btn-bg-dd-color: palette($scheme, 100) !default;
$btn-border-color: palette($scheme, 300) !default;
$btn-bg-hover-color: palette($scheme, 400) !default;
$btn-bg-active-color: palette($scheme, 300) !default;

$icon-border-color: palette($scheme, 200) !default;
$empty-icon-color: palette($scheme, 300) !default;
$error-icon-color: palette(Red, 200) !default;

$del-bg-color: palette($scheme, 200) !default;
$del-bg-hover-color: palette($scheme, 300) !default;

$theme: default;

// Button
.rfipbtn--#{$theme} {
	background-color: $btn-bg-color;
	border: 1px solid $btn-border-color;

	&:active,
	&:focus {
		@include card(1);
		border: 1px solid $btn-bg-hover-color;
	}

	// dropdown button
	.rfipbtn {
		&__button {
			border: 0 none transparent;
			border-left: 1px solid $btn-border-color;
			background-color: $btn-bg-dd-color;
			color: $icon-text;

			&:hover {
				background-color: $btn-bg-hover-color;
			}

			&:active {
				box-shadow: inset 0 0 10px 0 $btn-bg-active-color;
			}
		}

		// icon
		&__icon {
			border: 1px solid $icon-border-color;
			color: $icon-text;

			// empty
			&--empty {
				color: $empty-icon-color;
			}
		}

		// del
		&__del {
			background-color: $del-bg-color;

			&:hover {
				background-color: $del-bg-hover-color;
			}

			&:focus,
			&:active {
				outline: 1px solid $del-bg-hover-color;
			}
		}
	}
}

.rfipdropdown--#{$theme} {
	@include card(5);
	color: $text;

	input,
	select {
		color: $text;
	}

	background-color: $color-background;
	border: 1px solid $btn-border-color;
	// Category item
	.rfipcategory {
		select {
			background-color: $color-background;
			@include input($elem-border-color, $elem-border-focus-color);
		}
	}

	// Icons box
	.rfipicons {
		// current page
		&__cp {
			@include input($elem-border-color, $elem-border-focus-color);
		}

		&__left,
		&__right {
			background-color: $pager-bg-color;
			border: 1px solid $pager-bg-color;
			color: $icon-text;
			&:hover {
				background-color: $pager-bg-hover-color;
				border: 1px solid $pager-bg-hover-color;
			}
			&:focus,
			&:active {
				border: 1px solid $pager-bg-hover-color;
			}
		}

		// Individual icon box
		&__ibox {
			background-color: $ibox-bg-color;
			border: 1px solid $ibox-bg-color;
			color: $icon-text;
			&:hover {
				background-color: $ibox-bg-hover-color;
				border: 1px solid $ibox-bg-hover-color;
			}
			&:focus,
			&:active {
				border: 1px solid $ibox-bg-hover-color;
			}
			&--error {
				color: $error-icon-color;
			}
		}

		// Invidual icons
		&__icon {
			// selected
			&--selected {
				.rfipicons__ibox {
					background-color: $ibox-bg-selected-color;
				}
			}
		}
	}

	// Search
	.rfipsearch {
		input {
			@include input($elem-border-color, $elem-border-focus-color);
		}
	}
}
